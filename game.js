const canvas = document.getElementById("canvas");
const canvasContext = canvas.getContext("2d");
const pacFrames = document.getElementById("animations");
const hunterFrames = document.getElementById("hunters");

let createRect = (x, y, width, height, color) => {
  canvasContext.fillStyle = color;
  canvasContext.fillRect(x, y, width, height);
};
let fsp = 30;
let blockSize = 20;
let mapFirst = [
  [
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
  ],
  [
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
  ],
  [
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
  ],
  [
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
  ],
  [
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
  ],
  [
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
  ],
  [
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
  ],
  [
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
  ],
  [
    "n",
    "n",
    "n",
    "n",
    "w",
    " ",
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
    " ",
    "w",
    "n",
    "n",
    "n",
    "n",
  ],
  [
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    " ",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
  ],
  [
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
  ],
  [
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    " ",
    " ",
    " ",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
  ],
  [
    "n",
    "n",
    "n",
    "n",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "n",
    "n",
    "n",
    "n",
  ],
  [
    "n",
    "n",
    "n",
    "n",
    "w",
    " ",
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
    " ",
    "w",
    "n",
    "n",
    "n",
    "n",
  ],
  [
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    " ",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    " ",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
  ],
  [
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
  ],
  [
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
    "w",
    "w",
    " ",
    "w",
  ],
  [
    "w",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    "w",
  ],
  [
    "w",
    "w",
    " ",
    " ",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    " ",
    " ",
    "w",
    "w",
  ],
  [
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
  ],
  [
    "w",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    "w",
    " ",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    " ",
    "w",
  ],
  [
    "w",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    " ",
    "w",
  ],
  [
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
    "w",
  ],
];

let gameRender = () => {
  update();
  draw();
};

let update = () => {
  //todo
};

let draw = () => {
  //todo
};

let gameInterval = setInterval(gameLoop, 1000 / fsp);
